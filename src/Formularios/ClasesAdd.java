/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Josue Lacayo
 */
public class ClasesAdd extends javax.swing.JPanel{
    //Declaración de variables
    DefaultTableModel modelo = new DefaultTableModel();
    
    String query1;
            
    /**
     * Creates new form ClasesSeeClase
     */
    public ClasesAdd() {
        initComponents();
        //Consultas para la tabla
        query1 = "SELECT c.idclase, c.descripcion, (u.nombres+' '+u.apellidos), tp.tipo, s.nombre,"
                + "(SELECT DATEDIFF(MINUTE, c.horainicio, c.horafin)) "
                + "FROM Clase c, Usuario u, TipoEquipamiento tp, Equipamiento e, Salon s "
                + "WHERE C.idcoach = U.idusuario AND c.idequipo = e.idequipo AND "
                + "e.idtipoequipo = tp.idtipoequipamiento AND c.idsalon = s.idsalon";
        //Modelo
        modelo.addColumn("No.");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Coach");
        modelo.addColumn("Material");
        modelo.addColumn("Salon");
        modelo.addColumn("Duracion (m)");
        Tabla.setModel(modelo);
        //Rellenar los comboBoxs
        UsuarioSeeUsuario.RecargarTabla(Tabla, modelo, query1);
        
        cbxCoachs.removeAllItems();
        cbxEquipo.removeAllItems();
        cbxSalones.removeAllItems();
        
        String equipo = "SELECT tp.tipo "
                + "FROM TipoEquipamiento tp, Equipamiento e WHERE tp.idtipoequipamiento = e.idtipoequipo AND tp.estado = 'A'";
        ThirdLayer.BackEnd.FillComboBox(cbxEquipo, equipo);
        
        String coach = "SELECT (nombres+' '+apellidos) "
                        +"FROM Usuario u, TipoUsuario t WHERE u.idtipousuario = t.idtipousuario AND u.idtipousuario = 4 AND "
                        +"u.idestado = 1";
        ThirdLayer.BackEnd.FillComboBox(cbxCoachs, coach);
        
        String salon = "SELECT nombre FROM Salon WHERE idestadosalon = 1";
        ThirdLayer.BackEnd.FillComboBox(cbxSalones, salon);
        
        System.out.println(cbxEquipo.getItemCount() +" "+cbxCoachs.getItemCount()+" "+cbxSalones.getItemCount());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        cbxSalones = new javax.swing.JComboBox<>();
        cbxEquipo = new javax.swing.JComboBox<>();
        cbxCoachs = new javax.swing.JComboBox<>();
        txtInicio = new javax.swing.JFormattedTextField();
        txtFin = new javax.swing.JFormattedTextField();
        txtNombres = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1467, 1370));
        setRequestFocusEnabled(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("HH:mm");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 195, -1, -1));

        jLabel1.setText("HH:mm");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 195, -1, -1));

        lblError.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 0, 51));
        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError.setToolTipText("");
        add(lblError, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 214, 1400, 30));

        cbxSalones.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbxSalones.setBorder(null);
        cbxSalones.setOpaque(false);
        add(cbxSalones, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 140, 150, 50));

        cbxEquipo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbxEquipo.setBorder(null);
        cbxEquipo.setOpaque(false);
        add(cbxEquipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, 150, 50));

        cbxCoachs.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbxCoachs.setBorder(null);
        cbxCoachs.setOpaque(false);
        add(cbxCoachs, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 30, 470, 50));

        txtInicio.setBorder(null);
        try {
            txtInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtInicio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtInicio.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtInicio.setOpaque(false);
        add(txtInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 90, 50));

        txtFin.setBorder(null);
        try {
            txtFin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFin.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtFin.setOpaque(false);
        add(txtFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 90, 50));

        txtNombres.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        txtNombres.setBorder(null);
        txtNombres.setOpaque(false);
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresKeyTyped(evt);
            }
        });
        add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 430, -1));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visualizar/Boto¦ün agregar.png"))); // NOI18N
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
        });
        add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 130, -1, 60));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visualizar/Campos de datos personales.png"))); // NOI18N
        add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 1320, 180));

        Tabla.setBackground(new java.awt.Color(255, 255, 255));
        Tabla.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabla.setToolTipText("");
        Tabla.setGridColor(new java.awt.Color(153, 153, 153));
        Tabla.setRowHeight(64);
        Tabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Tabla.setShowVerticalLines(false);
        Tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(Tabla);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 1280, 1050));
    }// </editor-fold>//GEN-END:initComponents
    //Eventos
    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked
        AgregarClases();
    }//GEN-LAST:event_btnAgregarMouseClicked
    //Validación de texto
    private void txtNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)|| c == KeyEvent.VK_SPACE)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtNombresKeyTyped
    //Agregar una clase
    private void AgregarClases(){
        String [] inicio = txtInicio.getText().split(":", 2);
        String [] fin = txtFin.getText().split(":", 2);
        
        String SInicio = new StringBuilder().append(inicio[0]).append(inicio[1]).toString().trim();
        String SFin = new StringBuilder().append(fin[0]).append(fin[1]).toString().trim();
        
        if (!txtNombres.getText().trim().isEmpty() && cbxCoachs.getSelectedIndex() != -1 &&
            cbxEquipo.getSelectedIndex() != -1 && !SInicio.trim().isEmpty() &&
            !SFin.trim().isEmpty() && cbxSalones.getSelectedIndex() != -1){            
            Integer[] FInicio = new Integer[inicio.length];
            Integer[] FFin = new Integer[fin.length];
            
            int i = 0;
            int i2 = 0;
            
            for(String f: inicio){
                FInicio[i]=Integer.parseInt(f);
                i++;
            }
            for (String f2: fin) {
                FFin[i2]=Integer.parseInt(f2);
                i2++;
            } 
            System.out.println("Hora 1: "+FInicio[0]+"\nHora 2: "+FFin[0]+"\nResultado 1: "+(FInicio[0] >= FFin[0])+
                    "\nMinutos 1: "+FInicio[1]+"\nMinutos 2: "+FFin[1]+"\nResultado 2: "+(FInicio[1] >= FFin[1]));
            if ((FInicio[0] >= 00 && FInicio[0] <= 23) 
                    &&
                (FFin[0] >= 00 && FFin[0] <= 23) 
                    &&
                (FInicio[1] >= 00 && FInicio[1] <= 59) 
                    &&
                (FFin[1] >= 00 && FFin[1] <= 59)
                    &&
                (FInicio[0] <= FFin[0])
                        &&
                ((FInicio[1] <= FFin[1]) 
                    || 
                (FInicio[1] >= FFin[1])
                )) {
                int idSalon = ThirdLayer.BackEnd.getExecuteInt(
                        "SElECT idsalon FROM Salon WHERE nombre = ?", 
                        cbxSalones.getSelectedItem().toString()
                );
                
                System.out.println(""+idSalon);
                int idEquipo = ThirdLayer.BackEnd.getExecuteInt(
                        "SELECT idtipoequipamiento FROM TipoEquipamiento WHERE tipo = ?", 
                        cbxEquipo.getSelectedItem().toString()
                );
                System.out.println(""+idEquipo);
                int idCoach = ThirdLayer.BackEnd.getExecuteInt(
                        "SELECT idusuario FROM Usuario WHERE (nombres+' '+apellidos) = ?", 
                        cbxCoachs.getSelectedItem().toString()
                );
                System.out.println(""+idCoach);
                if (ThirdLayer.BackEndClases.GetExistingClass(
                    txtInicio.getText().trim(),txtFin.getText().trim(),(idSalon)) == false){
                    ThirdLayer.BackEndClases.setIdcoach(idCoach);
                    ThirdLayer.BackEndClases.setHorainicio(txtInicio.getText());
                    ThirdLayer.BackEndClases.setHorafin(txtFin.getText());
                    ThirdLayer.BackEndClases.setDescripcion(txtNombres.getText());
                    ThirdLayer.BackEndClases.setIdequipo(idEquipo);
                    ThirdLayer.BackEndClases.setIdsalon(idSalon);
                    if (ThirdLayer.BackEndClases.IngresarClase()){
                        ClasesFormularioPrincipal.Move(new ClasesAdd(), 2);
                    } else lblError.setText(
                    "<html><p style=\"style-align:center;\">Uno de los campos tiene datos erroneos,"
                            + " por favor verifique los datos otra vez. Tiempo</p></html>"
                );} else lblError.setText(
                "<html><p style=\"style-align:center;\">Ya existe una clase registrada en el mismo salón y la misma hora, "
                        + "por favor verifíque si los datos ingresados están correctos.</p></html>"
            );} else lblError.setText(
                "<html><p style=\"style-align:center;\">La hora ingresada no es válida.</p></html>"
        );} else lblError.setText(
            "<html><p style=\"style-align:center;\">Por favor rellene todos los campos para continuar.</p></html>"
    );}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla;
    private javax.swing.JLabel btnAgregar;
    private javax.swing.JComboBox<String> cbxCoachs;
    private javax.swing.JComboBox<String> cbxEquipo;
    private javax.swing.JComboBox<String> cbxSalones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JFormattedTextField txtFin;
    private javax.swing.JFormattedTextField txtInicio;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables

}
